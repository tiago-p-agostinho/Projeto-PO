package rest.menu.manager.client;

import pt.utl.ist.po.ui.Command;
import pt.utl.ist.po.ui.Form;
import pt.utl.ist.po.ui.InputString;
import pt.utl.ist.po.ui.InvalidOperation;

import rest.textui.DuplicateKeyException;
import rest.textui.clients.MenuEntry;
import rest.textui.clients.Message;
import java.util.Collection;
import java.util.Collections;
import java.util.ArrayList;


import rest.core.Outlet;
import rest.core.Client;
import rest.textui.clients.Message;
/**
 * This class implements the command that registers a client.
 *
 * @version 1.0
 * @author PO
  **/

public class RegisterClient extends Command<Outlet> {
    public RegisterClient(Outlet o) {
	super(false, MenuEntry.REGISTER_CLIENT, o);
    }

    /**
     * @see pt.utl.ist.po.ui.Command#execute()
     */
    @Override
    public void execute() throws InvalidOperation {
	Form f = new Form(title());
	InputString type = new InputString(f, Message.reqType());
	int i;
	f.parse();
	if((type.value().compareTo(Message.clientTypeVegetarian())==0) || (type.value().compareTo(Message.clientTypeOmnivorous())==0)){
		i=0;
	}
	else
		i=-1;
	while(i!=0){	
		if(((type.value().compareTo(Message.clientTypeVegetarian()))==0) || ((type.value().compareTo(Message.clientTypeOmnivorous())==0))){
			i=0;
		}
		else{	
			f = new Form(title());
			type = new InputString(f, Message.reqType());
			f.parse();
			}
	}
	f = new Form(title());	
	InputString name = new InputString(f, Message.reqName());
	InputString email = new InputString(f, Message.reqEmail());
	f.parse();
	for(Client c : entity().getClients()){
		if(email.value().equals(c.getKey())){
			throw new DuplicateKeyException();
		}
	}
	Client c = new Client(entity(),name.value(), email.value(), type.value());
	entity().addClient(c);
    }
}
